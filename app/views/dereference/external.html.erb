<% provide(:title, @entity.label&.value) %>
<div class="container">
  <h1><%= @entity.label&.value %></h1>
  <div class="d-flex justify-content-between">
    <div class="p-2">
      Crawled data from
      <h5><%= @entity.entity_uri&.html_safe %></h5>
    </div>
    <div class="p-2">
      <button
        class="btn btn-sm btn-primary"
        type="button"
        data-bs-toggle="collapse"
        data-bs-target="#collapseExample"
        aria-expanded="false"
        aria-controls="collapseExample"
      >
        Plugins
      </button>
    </div>
  </div>

  <div class="collapse" id="collapseExample">
    <div class="card card-body">
      <%= "<p> Using <a href='#{@shacl_url}'>#{humanize_url(@shacl_url) if @shacl_url}</a></p>".html_safe %>
      <% if @post_sparql %>
        <p>
          Using
          <a href='<%= @post_sparql %>'><%= humanize_url(@post_sparql) %></a></p>
      <% else %>
        <%= link_to "Compute score",
        dereference_external_path(
          uri: @entity.entity_uri,
          shacl:
            "https://raw.githubusercontent.com/culturecreates/artsdata-score/main/shacl/shacl_for_scoring.ttl",
          post_sparql:
            "https://raw.githubusercontent.com/culturecreates/artsdata-score/main/sparql/score_algorithm.sparql",
        ) %>

      <% end %>
    </div>
  </div>

  <div style="background: #EEEE; padding: 5px">
    <%= if @entity.graph.count == 0
      render partial: "external_resource", locals: { entity: @entity }
    end %>
    <% solutions =
      SPARQL.execute(
        "SELECT distinct ?subject WHERE { ?subject ?pred ?obj . filter not exists {  ?subject <http://www.w3.org/1999/xhtml/vocab#role> ?obj } }",
        @entity.graph,
      ) %>
    <%= if solutions.count > @max_entities_per_page ||= 40
      "<p> Showing first #{@max_entities_per_page} entities of #{solutions.count}</p>".html_safe
    end %>

    <% solutions.take(@max_entities_per_page).each do |s| %>
      <% next if s.subject.node? %>
      <% next if s.subject.statement? %>
      <% next if s.subject.value.start_with?("http://blank.node") %>

      <% new_entity = Entity.new(entity_uri: s.subject.value) %>
      <% new_entity.graph = @entity.graph %>
      <h3>
        <%= new_entity.label %>
      </h3>
      <% if !(s.subject.value.include?("blank")) %>
        <span class='badge bg-primary'>URI</span>
        <%= use_prefix(s.subject.value) %>
      <% else %>
        Blank node of type
        <%= new_entity.type %>
      <% end %>
      <%= render partial: "statements_table",
      locals: {
        triples: @entity.graph.query([s.subject, nil, nil]),
        graph: @entity.graph,
      } %>
    <% end %>
    <br>
    <br>
    <pre style="display: none;">
      <code>
        <% if  @entity.graph.count > 0 %>
          <%= @entity.graph.dump(:jsonld) %>
        <% end %>
      </code>
    </pre>
  </div>
</div>
